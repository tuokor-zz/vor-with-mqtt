<div class="row">
  <div class="col-md-4">
    <form class="form" id="location-form">
      <div class="form-group">
        <div class="input-group">
          <span class="input-group-addon">User</span>
          <input id="location-user"
                 type="text"
                 class="form-control"
                 placeholder="User email or name or avatar">
        </div>
        <div class="input-group">
          <span class="input-group-addon">Floor</span>
          <input id="location-floor"
                 type="number"
                 class="form-control"
                 placeholder="Default 8"
                 value=8>
        </div>
        <div class="input-group">
          <span class="input-group-addon">X</span>
          <input id="location-x"
                 type="number"
                 step="0.01"
                 class="form-control"
                 placeholder="Default 10"
                 value=10.0>
        </div>
        <div class="input-group">
          <span class="input-group-addon">Y</span>
          <input id="location-y"
                 type="number"
                 step="0.01"
                 class="form-control"
                 placeholder="Default 10"
                 value=10.0>
        </div>
      </div>
      <button id="send-location" class="btn btn-primary" type="submit">Send data of beacons</button>
    </form>
  </div>
  <div class="col-md-4">
    <% include response-holder.ejs %>
  </div>
</div>
<script>
  (function ($, FUTU2) {
    var $responseHolder = $('#<%= responseType%>-holder');

    var utils = FUTU2.utils;
    var socket = FUTU2.getSocket();

    $('#send-location').on('click', function (event) {
      event.preventDefault();
      var user = $('#location-user').val();
      var floor = $('#location-floor').val();
      var x = $('#location-x').val();
      var y = $('#location-y').val();

      var data = {
        type: 'location',
        email: user,
        floor: parseInt(floor, 10),
        x: parseFloat(x, 10.0),
        y: parseFloat(y, 10.0)
      };

      socket.emit('message', data);
    });

    socket.on('message', function (message) {
      if(message.type === 'location') {
        utils.renderJson($responseHolder, message);
      }
    });
  })(jQuery, window.FUTU2);
</script>
